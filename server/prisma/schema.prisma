// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String  @id @default(uuid())
  name           String
  email          String  @unique()
  phonenumber    String
  hashedPassword String
  roles          String  @default("student")
  createdAt      String
  updatedAt      String
  deletedAt      String?

  userResponseTest UserResponseTest[]
}

model Department {
  id   String @id @default(uuid())
  name String

  courses Course[]
  Test    Test[]
}

model Course {
  id   String @id @default(uuid())
  name String

  department   Department @relation(fields: [departmentId], references: [id])
  departmentId String

  questionItems ItemQuestion[]
}

model Test {
  id          String     @id @default(uuid())
  description String
  questions   Question[]

  department   Department @relation(fields: [departmentId], references: [id])
  departmentId String

  userResponseTest UserResponseTest[]
}

model Question {
  id          String @id @default(uuid())
  description String

  test   Test   @relation(fields: [testId], references: [id])
  testId String

  questionItems ItemQuestion[]
}

model ItemQuestion {
  id          String @id @default(uuid())
  description String

  question   Question @relation(fields: [questionId], references: [id])
  questionId String

  course   Course @relation(fields: [courseId], references: [id])
  courseId String

  responses Response[]
}

model UserResponseTest {
  user   User   @relation(fields: [userId], references: [id])
  userId String

  test   Test   @relation(fields: [testId], references: [id])
  testId String

  responses Response[]

  createdAt DateTime

  @@id([userId, createdAt, testId])
}

model Response {
  id String @id @default(uuid())

  itemQuestionId String
  itemQuestion   ItemQuestion @relation(fields: [itemQuestionId], references: [id])

  userResponseTest          UserResponseTest? @relation(fields: [userResponseTestUserId, userResponseTestCreatedAt, userResponseTestTestId], references: [userId, createdAt, testId])
  userResponseTestTestId    String?
  userResponseTestUserId    String?
  userResponseTestCreatedAt DateTime?
}
